{"version":3,"sources":["components/navbar.jsx","components/botnav.jsx","components/clearmenu.jsx","components/stage-1/transmute.jsx","components/errorsnackbar.jsx","components/stage-3/indivscore.jsx","components/stage-3/coursesyllabus.jsx","components/stage-2/individualcourse.jsx","components/errormessage.jsx","components/stage-1/courses.jsx","components/stage-1/pageerror.jsx","components/main.jsx","App.js","index.js"],"names":["bar","zIndex","NavBar","state","react_default","a","createElement","react","AppBar_default","style","position","color","Toolbar_default","Typography_default","variant","React","Component","withStyles","BotNav","vaule","navToTransmute","_this","props","history","push","setState","navToCourses","classes","this","BottomNavigation_default","value","showLabels","className","root","BottomNavigationAction_default","onClick","label","icon","Assignment_default","Class_default","withRouter","threeDots","right","top","ClearMenu","anchorEl","handleClick","event","currentTarget","handleClose","handleClear","resetState","clearStorage","IconButton_default","aria-owns","undefined","aria-haspopup","MoreVert_default","Menu_default","id","open","Boolean","onClose","MenuItem_default","Transmute","base","yourScore","totalItems","res1","res2","handleReset","handleChange","name","Object","defineProperty","target","handleTransmute","tScore","pScore","divScore","parseFloat","Math","round","FormControl_default","InputLabel_default","htmlFor","Select_default","native","onChange","TextField_default","textField","margin","fullWidth","type","Button_default","clearmenu","theme","ErrorSnackBar","Snackbar_default","anchorOrigin","vertical","horizontal","isOpen","isClosed","autoHideDuration","message","errorMessage","IndivScore","allScores","counter","transmutedGrade","errorOpen","handleComputation","length","add","acc","cur","transmuted","map","scores","yscore","reduce","titems","toString","syllabusName","syllabusWeight","handleAdd","_this$state","test","toConsumableArray","concat","handleErrorClosed","handleClickOpen","handleChangeText","handleChangeBase","clearScores","handleDeleteSyllabus","deleteSyllabus","build_default","parent","prefix","courseName","blacklist","Paper_default","Table_default","table","TableHead_default","TableRow_default","TableCell_default","align","TableBody_default","score","key","component","scope","size","Dialog_default","DialogTitle_default","DialogContent_default","autoFocus","DialogActions_default","errorsnackbar","width","marginTop","spacing","unit","overflowX","fabButton","bottom","CourseSyllabus","allSyllabus","expanded","weight","clearSyllabus","panel","handleGrades","index","findIndex","syllabus","update","tg","$set","finalGrade","wt","listSyllabus","includes","addSyllabus","selectedCourse","handleDelete","tempArray","filter","onRef","_this2","ExpansionPanel_default","ExpansionPanelSummary_default","expandIcon","ExpandMore_default","heading","secondaryHeading","ExpansionPanelDetails_default","indivscore","ref","indivScore","Fab_default","aria-label","Add_default","InputProps","endAdornment","InputAdornment_default","fontSize","typography","pxToRem","flexBasis","flexShrink","palette","text","secondary","Transition","Slide_default","assign","direction","IndividualCourse","courseGrades","transG","course","grade","createData","handleDeleteCourse","courseSyllabus","deleteCourse","listTG","computeValue","fullScreen","editCourse","stopEdit","TransitionComponent","appBar","flex","Delete_default","coursesyllabus","Chip_default","ErrorMessage","Courses","courses","activeCourse","handleEditCourse","handleStopEdit","Number","isInteger","errormessage","listCourses","ListItem_default","button","divider","bind","ListItemText_default","primary","List_default","PaperProps","backgroundColor","individualcourse","background","paper","PageError","Main","BrowserRouter","navbar","Switch","Route","exact","path","render","transmute","stage_1_courses","botnav","App","main","window","addEventListener","scale","preventDefault","passive","createMuiTheme","ChocobunTheme","ReactDOM","styles","index_es","src_App_0","document","getElementById","navigator","serviceWorker","register","then","registration","console","log","catch","error"],"mappings":"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","file":"static/js/main.48d48a46.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Fragment } from \"react\";\r\n\r\nconst styles = {\r\n  //\r\n};\r\n\r\nconst bar = {\r\n  zIndex: 5\r\n};\r\n\r\nclass NavBar extends React.Component {\r\n  state = {\r\n    //\r\n  };\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <AppBar style={bar} position=\"fixed\" color=\"primary\">\r\n          <Toolbar>\r\n            <Typography variant=\"h6\" color=\"inherit\">\r\n              Chocobun\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <Toolbar />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nNavBar.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(NavBar);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport BottomNavigation from \"@material-ui/core/BottomNavigation\";\r\nimport BottomNavigationAction from \"@material-ui/core/BottomNavigationAction\";\r\nimport TransmuteIcon from \"@material-ui/icons/Assignment\";\r\nimport ComputeIcon from \"@material-ui/icons/Class\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Fragment } from \"react\";\r\n\r\nconst styles = {\r\n  root: {\r\n    //\r\n  }\r\n};\r\n\r\nclass BotNav extends React.Component {\r\n  state = {\r\n    vaule: 0\r\n  };\r\n\r\n  navToTransmute = () => {\r\n    this.props.history.push(\"/\");\r\n    this.setState({ vaule: 0 });\r\n  };\r\n\r\n  navToCourses = () => {\r\n    this.props.history.push(\"/courses\");\r\n    this.setState({ vaule: 1 });\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n      return (\r\n        <Fragment>\r\n          <BottomNavigation\r\n            value={this.state.vaule}\r\n            showLabels\r\n            className={classes.root}\r\n          >\r\n            <BottomNavigationAction\r\n              onClick={this.navToTransmute}\r\n              label=\"Transmute\"\r\n              icon={<TransmuteIcon />}\r\n            />\r\n            <BottomNavigationAction\r\n              onClick={this.navToCourses}\r\n              label=\"Courses\"\r\n              icon={<ComputeIcon />}\r\n            />\r\n          </BottomNavigation>\r\n        </Fragment>\r\n      );\r\n  }\r\n}\r\n\r\nBotNav.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withRouter(withStyles(styles)(BotNav));\r\n","import React from \"react\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MoreIcon from \"@material-ui/icons/MoreVert\";\r\nimport { Fragment } from \"react\";\r\nimport { clearStorage } from \"react-simple-storage\";\r\n\r\nconst threeDots = {\r\n  right: 5,\r\n  top: 5,\r\n  position: \"fixed\",\r\n  zIndex: 10\r\n};\r\n\r\nclass ClearMenu extends React.Component {\r\n  state = {\r\n    anchorEl: null\r\n  };\r\n\r\n  handleClick = event => {\r\n    this.setState({ anchorEl: event.currentTarget });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ anchorEl: null });\r\n  };\r\n\r\n  handleClear = () => {\r\n    this.props.resetState();\r\n    clearStorage(\"\");\r\n    this.handleClose();\r\n  };\r\n\r\n  render() {\r\n    const { anchorEl } = this.state;\r\n    return (\r\n      <Fragment>\r\n        <IconButton\r\n          aria-owns={anchorEl ? \"simple-menu\" : undefined}\r\n          aria-haspopup=\"true\"\r\n          onClick={this.handleClick}\r\n          style={threeDots}\r\n          color=\"secondary\"\r\n        >\r\n          <MoreIcon />\r\n        </IconButton>\r\n        <Menu\r\n          id=\"simple-menu\"\r\n          anchorEl={anchorEl}\r\n          open={Boolean(anchorEl)}\r\n          onClose={this.handleClose}\r\n        >\r\n          <MenuItem onClick={this.handleClear}>Clear All Data</MenuItem>\r\n        </Menu>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ClearMenu;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Fragment } from \"react\";\r\nimport ClearMenu from \"../clearmenu\";\r\n\r\nconst styles = theme => ({\r\n  //\r\n});\r\n\r\nclass Transmute extends React.Component {\r\n  state = {\r\n    base: \"65\",\r\n    yourScore: \"\",\r\n    totalItems: \"\",\r\n    res1: \"Chocobun App by Chocobun Fam\",\r\n    res2: \"v1.0.0\"\r\n  };\r\n\r\n  handleReset = () => {\r\n    this.setState({\r\n      base: \"65\",\r\n      yourScore: \"\",\r\n      totalItems: \"\",\r\n      res1: \"Chocobun App by Chocobun Fam\",\r\n      res2: \"v1.0.0\"\r\n    });\r\n  };\r\n\r\n  handleChange = name => event => {\r\n    this.setState({ [name]: event.target.value });\r\n  };\r\n\r\n  handleTransmute = () => {\r\n    let tScore, pScore, scoreStat;\r\n    let divScore =\r\n      parseFloat(this.state.yourScore) / parseFloat(this.state.totalItems);\r\n\r\n    if (this.state.base === \"65\") {\r\n      tScore = divScore * 71.5 + 28.5;\r\n      tScore = Math.round(tScore);\r\n      pScore = parseFloat(this.state.totalItems) * 0.65;\r\n    } else if (this.state.base === \"60\") {\r\n      tScore = divScore * 62.5 + 37.5;\r\n      tScore = Math.round(tScore);\r\n      pScore = parseFloat(this.state.totalItems) * 0.6;\r\n    } else if (this.state.base === \"50\") {\r\n      tScore = divScore * 50 + 50;\r\n      tScore = Math.round(tScore);\r\n      pScore = parseFloat(this.state.totalItems) * 0.5;\r\n    }\r\n\r\n    if (parseFloat(this.state.yourScore) >= pScore) {\r\n      scoreStat = \"You passed! \";\r\n    } else {\r\n      scoreStat = \"You failed! \";\r\n    }\r\n\r\n    const res1 = scoreStat + \"The passing score is: \" + pScore;\r\n    const res2 = \"Your transmuted grade is: \" + tScore;\r\n    this.setState({ res1, res2 });\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <Fragment>\r\n        <div className=\"PositionFixed\">\r\n          <div className=\"ScoreInput\">\r\n            <FormControl>\r\n              <InputLabel htmlFor=\"base-native-simple\">Base</InputLabel>\r\n              <Select\r\n                native\r\n                value={this.state.base}\r\n                onChange={this.handleChange(\"base\")}\r\n              >\r\n                <option value={65}>65</option>\r\n                <option value={60}>60</option>\r\n                <option value={50}>50</option>\r\n              </Select>\r\n            </FormControl>\r\n            <TextField\r\n              id=\"standard-yourScore\"\r\n              label=\"Your Score\"\r\n              className={classes.textField}\r\n              value={this.state.yourScore}\r\n              onChange={this.handleChange(\"yourScore\")}\r\n              margin=\"normal\"\r\n              fullWidth\r\n              type=\"tel\"\r\n            />\r\n            <TextField\r\n              id=\"standard-totalItems\"\r\n              label=\"Total Items\"\r\n              className={classes.textField}\r\n              value={this.state.totalItems}\r\n              onChange={this.handleChange(\"totalItems\")}\r\n              margin=\"normal\"\r\n              fullWidth\r\n              type=\"tel\"\r\n            />\r\n          </div>\r\n          <div className=\"TransmuteButton\">\r\n            <Button\r\n              onClick={this.handleTransmute}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n            >\r\n              Transmute\r\n            </Button>\r\n          </div>\r\n          <div className=\"TransmuteResult\">\r\n            <p>{this.state.res1}</p>\r\n            <p>{this.state.res2}</p>\r\n          </div>\r\n        </div>\r\n        <ClearMenu resetState={this.handleReset} />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nTransmute.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(Transmute);\r\n","import React from \"react\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\n\r\nclass ErrorSnackBar extends React.Component {\r\n  state = {\r\n    //\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Snackbar\r\n          anchorOrigin={{ vertical: \"bottom\", horizontal: \"center\" }}\r\n          open={this.props.isOpen}\r\n          onClose={this.props.isClosed}\r\n          autoHideDuration={1500}\r\n          message={this.props.errorMessage}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ErrorSnackBar;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Fragment } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport SimpleStorage from \"react-simple-storage\";\r\nimport ErrorSnackBar from \"../errorsnackbar\";\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing.unit * 3,\r\n    overflowX: \"auto\"\r\n  }\r\n});\r\n\r\nfunction createData(name, yscore, titems) {\r\n  return { name, yscore, titems };\r\n}\r\n\r\nclass IndivScore extends React.Component {\r\n  state = {\r\n    base: \"65\",\r\n    allScores: [],\r\n    yourScore: \"\",\r\n    totalItems: \"\",\r\n    open: false,\r\n    counter: 1,\r\n    transmutedGrade: \"\",\r\n    errorOpen: false,\r\n    errorMessage: \"\"\r\n  };\r\n\r\n  handleComputation = () => {\r\n    if (this.state.allScores.length > 0) {\r\n      const add = (acc, cur) => parseFloat(acc) + parseFloat(cur);\r\n      const sumYScores = this.state.allScores\r\n        .map(scores => scores.yscore)\r\n        .reduce(add);\r\n      const sumTItems = this.state.allScores\r\n        .map(scores => scores.titems)\r\n        .reduce(add);\r\n\r\n      let transmuted = sumYScores / sumTItems;\r\n\r\n      const base = this.state.base.toString();\r\n      if (base === \"65\") {\r\n        transmuted = transmuted * 71.5 + 28.5;\r\n      } else if (base === \"60\") {\r\n        transmuted = transmuted * 62.5 + 37.5;\r\n      } else if (base === \"50\") {\r\n        transmuted = transmuted * 50 + 50;\r\n      }\r\n\r\n      transmuted = Math.round(transmuted * 100) / 100;\r\n      this.setState({ transmutedGrade: transmuted }, () => {\r\n        this.props.transmutedGrade(\r\n          this.props.syllabusName,\r\n          this.state.transmutedGrade,\r\n          this.props.syllabusWeight\r\n        );\r\n      });\r\n    }\r\n  };\r\n\r\n  handleAdd = () => {\r\n    const { yourScore, totalItems } = this.state;\r\n    if (/^\\d+$/.test(yourScore) && /^\\d+$/.test(totalItems)) {\r\n      this.setState(\r\n        {\r\n          counter: this.state.counter + 1,\r\n          allScores: [\r\n            ...this.state.allScores,\r\n            createData(\r\n              this.props.syllabusName + \" \" + this.state.counter,\r\n              this.state.yourScore,\r\n              this.state.totalItems\r\n            )\r\n          ]\r\n        },\r\n        () => {\r\n          this.handleComputation();\r\n        }\r\n      );\r\n    } else if (!/^\\d+$/.test(yourScore)) {\r\n      this.setState({\r\n        errorOpen: true,\r\n        errorMessage: \"Your score should be a number.\"\r\n      });\r\n    } else if (!/^\\d+$/.test(totalItems)) {\r\n      this.setState({\r\n        errorOpen: true,\r\n        errorMessage: \"Total items should be a number.\"\r\n      });\r\n    }\r\n    this.handleClose();\r\n  };\r\n\r\n  handleErrorClosed = () => {\r\n    this.setState({ errorOpen: false });\r\n  };\r\n\r\n  handleClickOpen = () => {\r\n    this.setState({ open: true });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ open: false, yourScore: \"\", totalItems: \"\" });\r\n  };\r\n\r\n  handleChangeText = name => event => {\r\n    this.setState({\r\n      [name]: event.target.value\r\n    });\r\n  };\r\n\r\n  handleChangeBase = event => {\r\n    this.setState(\r\n      {\r\n        base: event.target.value\r\n      },\r\n      () => this.handleComputation()\r\n    );\r\n  };\r\n\r\n  clearScores = () => {\r\n    this.setState({ allScores: [] });\r\n    this.props.transmutedGrade(\r\n      this.props.syllabusName,\r\n      0,\r\n      this.props.syllabusWeight\r\n    );\r\n  };\r\n\r\n  handleDeleteSyllabus = () => {\r\n    this.clearScores();\r\n    this.props.deleteSyllabus(this.props.syllabusName);\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <Fragment>\r\n        <SimpleStorage\r\n          parent={this}\r\n          prefix={\"is_\" + this.props.courseName + \"_\" + this.props.syllabusName}\r\n          blacklist={[\"open\"]}\r\n        />\r\n        <Paper className={classes.root}>\r\n          <Table className={classes.table}>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell align=\"right\">\r\n                  <Typography>Base</Typography>\r\n                </TableCell>\r\n                <TableCell align=\"left\">\r\n                  <FormControl>\r\n                    <Select\r\n                      native\r\n                      value={this.state.base}\r\n                      onChange={this.handleChangeBase}\r\n                    >\r\n                      <option value={65}>65</option>\r\n                      <option value={60}>60</option>\r\n                      <option value={50}>50</option>\r\n                    </Select>\r\n                  </FormControl>\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {this.state.allScores.map(score => {\r\n                return (\r\n                  <TableRow key={score.name}>\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      {score.name}\r\n                    </TableCell>\r\n                    <TableCell align=\"right\">\r\n                      {score.yscore + \"/\" + score.titems}\r\n                    </TableCell>\r\n                  </TableRow>\r\n                );\r\n              })}\r\n            </TableBody>\r\n          </Table>\r\n          <div className=\"tableButtons\">\r\n            <Button\r\n              size=\"small\"\r\n              onClick={this.clearScores}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n            >\r\n              Clear\r\n            </Button>\r\n            <span className=\"alignRight\">\r\n              <Button\r\n                size=\"small\"\r\n                onClick={this.handleClickOpen}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n              >\r\n                Add\r\n              </Button>\r\n            </span>\r\n          </div>\r\n        </Paper>\r\n        <div className=\"deleteSyllabus\">\r\n          <Button\r\n            size=\"small\"\r\n            onClick={this.handleDeleteSyllabus}\r\n            variant=\"text\"\r\n            color=\"primary\"\r\n          >\r\n            Delete Syllabus\r\n          </Button>\r\n        </div>\r\n        <Dialog\r\n          fullWidth={true}\r\n          open={this.state.open}\r\n          onClose={this.handleClose}\r\n        >\r\n          <DialogTitle>{\"New \" + this.props.syllabusName}</DialogTitle>\r\n          <DialogContent>\r\n            <TextField\r\n              onChange={this.handleChangeText(\"yourScore\")}\r\n              autoFocus\r\n              margin=\"dense\"\r\n              label=\"Your Score\"\r\n              fullWidth\r\n              type=\"tel\"\r\n            />\r\n            <TextField\r\n              onChange={this.handleChangeText(\"totalItems\")}\r\n              margin=\"dense\"\r\n              label=\"Total Items\"\r\n              fullWidth\r\n              type=\"tel\"\r\n            />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={this.handleClose} color=\"primary\">\r\n              Cancel\r\n            </Button>\r\n            <Button onClick={this.handleAdd} color=\"primary\">\r\n              Add\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n        <ErrorSnackBar\r\n          isOpen={this.state.errorOpen}\r\n          isClosed={this.handleErrorClosed}\r\n          errorMessage={this.state.errorMessage}\r\n        />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nIndivScore.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(IndivScore);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\r\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\r\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport { Fragment } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport SimpleStorage from \"react-simple-storage\";\r\nimport IndivScore from \"./indivscore\";\r\nimport update from \"immutability-helper\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport ErrorSnackBar from \"../errorsnackbar\";\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: \"100%\"\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    flexBasis: \"33.33%\",\r\n    flexShrink: 0\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary\r\n  }\r\n});\r\n\r\nconst fabButton = {\r\n  right: 20,\r\n  bottom: 25,\r\n  position: \"fixed\"\r\n};\r\n\r\nfunction createData(name, tg, wt) {\r\n  return { name, tg, wt };\r\n}\r\n\r\nclass CourseSyllabus extends React.Component {\r\n  state = {\r\n    allSyllabus: [],\r\n    expanded: null,\r\n    open: false,\r\n    syllabusName: \"\",\r\n    weight: \"\",\r\n    errorOpen: false,\r\n    errorMessage: \"\"\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.onRef(this);\r\n  }\r\n  componentWillUnmount() {\r\n    this.props.onRef(undefined);\r\n  }\r\n\r\n  clearSyllabus = () => {\r\n    const tempArray = this.state.allSyllabus;\r\n    if (tempArray.length === 0) {\r\n      return true;\r\n    } else {\r\n      this.setState({\r\n        errorOpen: true,\r\n        errorMessage: \"Please delete all syllabi before deleting course.\"\r\n      });\r\n      return false;\r\n    }\r\n  };\r\n\r\n  handleChange = panel => (event, expanded) => {\r\n    this.setState({\r\n      expanded: expanded ? panel : false\r\n    });\r\n  };\r\n\r\n  handleClickOpen = () => {\r\n    this.setState({ open: true });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ open: false, syllabusName: \"\", weight: \"\" });\r\n  };\r\n\r\n  handleChangeText = name => event => {\r\n    this.setState({ [name]: event.target.value });\r\n  };\r\n\r\n  handleGrades = (name, transmutedGrade, weight) => {\r\n    const index = this.state.allSyllabus.findIndex(\r\n      syllabus => syllabus.name === name\r\n    );\r\n    this.setState({\r\n      allSyllabus: update(this.state.allSyllabus, {\r\n        [index]: { tg: { $set: \"Transmuted Grade: \" + transmutedGrade } }\r\n      })\r\n    });\r\n    this.props.finalGrade(name, (transmutedGrade * weight) / 100);\r\n  };\r\n\r\n  handleAdd = () => {\r\n    const { allSyllabus, syllabusName, weight } = this.state;\r\n    const listSyllabus = allSyllabus.map(syllabus => syllabus.name);\r\n    if (\r\n      !listSyllabus.includes(syllabusName) &&\r\n      syllabusName !== \"\" &&\r\n      /^\\d+$/.test(weight)\r\n    ) {\r\n      this.props.addSyllabus(this.props.selectedCourse, syllabusName);\r\n      this.setState({\r\n        allSyllabus: [\r\n          ...allSyllabus,\r\n          createData(syllabusName, \"Transmuted Grade: 0\", weight)\r\n        ]\r\n      });\r\n    } else if (listSyllabus.includes(syllabusName)) {\r\n      this.setState({\r\n        errorOpen: true,\r\n        errorMessage: \"Label already used.\"\r\n      });\r\n    } else if (syllabusName === \"\") {\r\n      this.setState({\r\n        errorOpen: true,\r\n        errorMessage: \"Label can't be blank.\"\r\n      });\r\n    } else if (!/^\\d+$/.test(weight)) {\r\n      this.setState({\r\n        errorOpen: true,\r\n        errorMessage: \"Weight should be a number.\"\r\n      });\r\n    }\r\n    this.handleClose();\r\n  };\r\n\r\n  handleDelete = syllabusName => {\r\n    const tempArray = this.state.allSyllabus.filter(\r\n      syllabus => syllabus.name !== syllabusName\r\n    );\r\n    this.setState({ allSyllabus: tempArray });\r\n  };\r\n\r\n  handleErrorClosed = () => {\r\n    this.setState({ errorOpen: false });\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { expanded } = this.state;\r\n    const { allSyllabus } = this.state;\r\n    const listSyllabus = allSyllabus.map(syllabus => (\r\n      <ExpansionPanel\r\n        key={syllabus.name}\r\n        expanded={expanded === \"panel\" + syllabus.name}\r\n        onChange={this.handleChange(\"panel\" + syllabus.name)}\r\n      >\r\n        <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n          <Typography className={classes.heading}>\r\n            {syllabus.name + \" (\" + syllabus.wt + \"%)\"}\r\n          </Typography>\r\n          <Typography className={classes.secondaryHeading}>\r\n            {syllabus.tg}\r\n          </Typography>\r\n        </ExpansionPanelSummary>\r\n        <ExpansionPanelDetails>\r\n          <div className=\"AddSyllabusDiv\">\r\n            <IndivScore\r\n              deleteSyllabus={this.handleDelete}\r\n              courseName={this.props.selectedCourse}\r\n              syllabusName={syllabus.name}\r\n              transmutedGrade={this.handleGrades}\r\n              syllabusWeight={syllabus.wt}\r\n              onRef={ref => (this.indivScore = ref)}\r\n            />\r\n          </div>\r\n        </ExpansionPanelDetails>\r\n      </ExpansionPanel>\r\n    ));\r\n\r\n    return (\r\n      <Fragment>\r\n        <SimpleStorage\r\n          parent={this}\r\n          prefix={\"cs_\" + this.props.selectedCourse}\r\n          blacklist={[\"open\", \"expanded\", \"errorOpen\", \"errorMessage\"]}\r\n        />\r\n        <div className={classes.root}>{listSyllabus}</div>\r\n        <Fab\r\n          onClick={this.handleClickOpen}\r\n          style={fabButton}\r\n          size=\"medium\"\r\n          color=\"primary\"\r\n          aria-label=\"Add\"\r\n        >\r\n          <AddIcon />\r\n        </Fab>\r\n        <Dialog\r\n          fullWidth={true}\r\n          open={this.state.open}\r\n          onClose={this.handleClose}\r\n        >\r\n          <DialogTitle>New Syllabus</DialogTitle>\r\n          <DialogContent>\r\n            <TextField\r\n              onChange={this.handleChangeText(\"syllabusName\")}\r\n              autoFocus\r\n              margin=\"dense\"\r\n              label=\"Label (e.g. Quiz, Attendance)\"\r\n              fullWidth\r\n            />\r\n            <TextField\r\n              className=\"smallTextField\"\r\n              onChange={this.handleChangeText(\"weight\")}\r\n              margin=\"dense\"\r\n              label=\"Weight\"\r\n              type=\"tel\"\r\n              InputProps={{\r\n                endAdornment: <InputAdornment position=\"end\">%</InputAdornment>\r\n              }}\r\n            />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={this.handleClose} color=\"primary\">\r\n              Cancel\r\n            </Button>\r\n            <Button onClick={this.handleAdd} color=\"primary\">\r\n              Add\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n        <ErrorSnackBar\r\n          isOpen={this.state.errorOpen}\r\n          isClosed={this.handleErrorClosed}\r\n          errorMessage={this.state.errorMessage}\r\n        />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nCourseSyllabus.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(CourseSyllabus);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport CourseSyllabus from \"../stage-3/coursesyllabus\";\r\nimport { Fragment } from \"react\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport update from \"immutability-helper\";\r\nimport SimpleStorage from \"react-simple-storage\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\nconst styles = {\r\n  appBar: {\r\n    position: \"relative\"\r\n  },\r\n  flex: {\r\n    flex: 1\r\n  }\r\n};\r\n\r\nfunction Transition(props) {\r\n  return <Slide direction=\"up\" {...props} />;\r\n}\r\n\r\nfunction createData(name, syllabus, grade) {\r\n  return { name, syllabus, grade };\r\n}\r\n\r\nfunction computeValue(listTG) {\r\n  if (listTG.length > 0) {\r\n    const add = (acc, cur) => parseFloat(acc) + parseFloat(cur);\r\n    let finalGrade = listTG.reduce(add);\r\n    finalGrade = Math.round(finalGrade * 100) / 100;\r\n    return finalGrade;\r\n  } else return 100;\r\n}\r\n\r\nclass IndividualCourse extends React.Component {\r\n  state = {\r\n    courseGrades: []\r\n  };\r\n\r\n  handleGrades = (syllabus, transG) => {\r\n    const { courseGrades } = this.state;\r\n    const index = courseGrades.findIndex(\r\n      course =>\r\n        course.name === this.props.courseName && course.syllabus === syllabus\r\n    );\r\n    this.setState({\r\n      courseGrades: update(courseGrades, {\r\n        [index]: { grade: { $set: transG } }\r\n      })\r\n    });\r\n  };\r\n\r\n  handleAdd = (course, syllabus) => {\r\n    this.setState({\r\n      courseGrades: [\r\n        ...this.state.courseGrades,\r\n        createData(course, syllabus, \"0\")\r\n      ]\r\n    });\r\n  };\r\n\r\n  handleDeleteCourse = () => {\r\n    if (this.courseSyllabus.clearSyllabus()) {\r\n      this.props.deleteCourse(this.props.courseName);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const listTG = this.state.courseGrades.map(tg => {\r\n      if (tg.name === this.props.courseName) {\r\n        return tg.grade;\r\n      } else return 0;\r\n    });\r\n    const finalGrade = computeValue(listTG);\r\n\r\n    return (\r\n      <Fragment>\r\n        <SimpleStorage parent={this} prefix={\"ic\"} />\r\n        <Dialog\r\n          fullScreen\r\n          open={this.props.editCourse}\r\n          onClose={this.props.stopEdit}\r\n          TransitionComponent={Transition}\r\n        >\r\n          <AppBar className={classes.appBar}>\r\n            <Toolbar>\r\n              <Typography variant=\"h6\" color=\"inherit\" className={classes.flex}>\r\n                {this.props.courseName}\r\n              </Typography>\r\n              <IconButton onClick={this.handleDeleteCourse} color=\"inherit\">\r\n                <DeleteIcon />\r\n              </IconButton>\r\n              <Button onClick={this.props.stopEdit} color=\"inherit\">\r\n                DONE\r\n              </Button>\r\n            </Toolbar>\r\n          </AppBar>\r\n          <CourseSyllabus\r\n            finalGrade={this.handleGrades}\r\n            selectedCourse={this.props.courseName}\r\n            addSyllabus={this.handleAdd}\r\n            onRef={ref => (this.courseSyllabus = ref)}\r\n          />\r\n          <Chip\r\n            className=\"FinalSGrade\"\r\n            label={\"Final Grade: \" + finalGrade}\r\n            color=\"primary\"\r\n          />\r\n        </Dialog>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nIndividualCourse.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(IndividualCourse);\r\n","import React from \"react\";\r\n\r\nconst ErrorMessage = () => {\r\n  return (\r\n    <div>\r\n      <h1>An error has occured!!</h1>\r\n      <h3>Please clear all app data to continue using this page.</h3>\r\n      <h4>Follow these instructions:</h4>\r\n      <ol>\r\n        <li>Go to \"Transmute\" page</li>\r\n        <li>Tap on the three dots on the upper right corner of the app</li>\r\n        <li>Choose clear all data</li>\r\n      </ol>\r\n      <p>This will delete all data of this app.</p>\r\n      <p>\r\n        To avoid this error in the future, refrain from using numbers when\r\n        naming courses and syllabus.\r\n      </p>\r\n      <p>\r\n        Thank you for using the app and sorry for this unfortunate error. Have a\r\n        great day!\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ErrorMessage;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport { Fragment } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport IndividualCourse from \"../stage-2/individualcourse\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport SimpleStorage from \"react-simple-storage\";\r\nimport ErrorMessage from \"../errormessage\";\r\nimport ErrorSnackBar from \"../errorsnackbar\";\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: \"100%\",\r\n    backgroundColor: theme.palette.background.paper\r\n  }\r\n});\r\n\r\nconst fabButton = {\r\n  right: 20,\r\n  bottom: 70,\r\n  position: \"fixed\"\r\n};\r\n\r\nclass Courses extends React.Component {\r\n  state = {\r\n    courses: [],\r\n    open: false,\r\n    courseName: \"\",\r\n    editCourse: false,\r\n    activeCourse: \"\",\r\n    errorOpen: false,\r\n    errorMessage: \"\"\r\n  };\r\n\r\n  handleClickOpen = () => {\r\n    this.setState({ open: true });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ open: false, courseName: \"\" });\r\n  };\r\n\r\n  handleChange = name => event => {\r\n    this.setState({ [name]: event.target.value });\r\n  };\r\n\r\n  handleAdd = () => {\r\n    if (\r\n      !this.state.courses.includes(this.state.courseName) &&\r\n      this.state.courseName !== \"\"\r\n    ) {\r\n      this.setState({\r\n        courses: [...this.state.courses, this.state.courseName]\r\n      });\r\n    } else if (this.state.courses.includes(this.state.courseName)) {\r\n      this.setState({\r\n        errorOpen: true,\r\n        errorMessage: \"Course name is already used.\"\r\n      });\r\n    } else if (this.state.courseName === \"\") {\r\n      this.setState({\r\n        errorOpen: true,\r\n        errorMessage: \"Course name can't be blank.\"\r\n      });\r\n    }\r\n    this.handleClose();\r\n  };\r\n\r\n  handleErrorClosed = () => {\r\n    this.setState({ errorOpen: false });\r\n  };\r\n\r\n  handleEditCourse = course => {\r\n    this.setState({ editCourse: true, activeCourse: course });\r\n  };\r\n\r\n  handleStopEdit = () => {\r\n    this.setState({ editCourse: false });\r\n  };\r\n\r\n  handleDelete = courseName => {\r\n    const tempArray = this.state.courses.filter(\r\n      course => course !== courseName\r\n    );\r\n    this.setState({ courses: tempArray });\r\n    this.handleStopEdit();\r\n  };\r\n\r\n  render() {\r\n    const { courses } = this.state;\r\n    if (Number.isInteger(courses)) {\r\n      return <ErrorMessage />;\r\n    } else {\r\n      const listCourses = courses.map(course => (\r\n        <ListItem\r\n          key={course}\r\n          button\r\n          divider\r\n          onClick={this.handleEditCourse.bind(this, course)}\r\n        >\r\n          <ListItemText primary={course} />\r\n        </ListItem>\r\n      ));\r\n      return (\r\n        <Fragment>\r\n          <SimpleStorage\r\n            parent={this}\r\n            prefix=\"c\"\r\n            blacklist={[\"open\", \"editCourse\"]}\r\n          />\r\n          <List component=\"nav\">{listCourses}</List>\r\n          <Fab\r\n            onClick={this.handleClickOpen}\r\n            style={fabButton}\r\n            size=\"medium\"\r\n            color=\"primary\"\r\n            aria-label=\"Add\"\r\n          >\r\n            <AddIcon />\r\n          </Fab>\r\n          <Dialog\r\n            fullWidth={true}\r\n            open={this.state.open}\r\n            onClose={this.handleClose}\r\n            PaperProps={{\r\n              style: {\r\n                backgroundColor: \"#fff\"\r\n              }\r\n            }}\r\n          >\r\n            <DialogTitle>New Course</DialogTitle>\r\n            <DialogContent>\r\n              <TextField\r\n                onChange={this.handleChange(\"courseName\")}\r\n                autoFocus\r\n                margin=\"dense\"\r\n                label=\"e.g. Anatomy, Patho\"\r\n                fullWidth\r\n              />\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={this.handleClose} color=\"primary\">\r\n                Cancel\r\n              </Button>\r\n              <Button onClick={this.handleAdd} color=\"primary\">\r\n                Add\r\n              </Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n          <IndividualCourse\r\n            stopEdit={this.handleStopEdit}\r\n            editCourse={this.state.editCourse}\r\n            courseName={this.state.activeCourse}\r\n            deleteCourse={this.handleDelete}\r\n          />\r\n          <ErrorSnackBar\r\n            isOpen={this.state.errorOpen}\r\n            isClosed={this.handleErrorClosed}\r\n            errorMessage={this.state.errorMessage}\r\n          />\r\n        </Fragment>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nCourses.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(Courses);\r\n","import React from \"react\";\r\n\r\nconst PageError = () => {\r\n  return (\r\n    <div>\r\n      <h3>This page does not exist!</h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PageError;\r\n","import React from \"react\";\r\nimport NavBar from \"./navbar\";\r\nimport BotNav from \"./botnav\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Transmute from \"./stage-1/transmute\";\r\nimport Courses from \"./stage-1/courses\";\r\nimport PageError from \"./stage-1/pageerror\";\r\nimport { Fragment } from \"react\";\r\n\r\nclass Main extends React.Component {\r\n  state = {\r\n    //\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <Fragment>\r\n          <div className=\"fixedScreen noselect\">\r\n            <NavBar />\r\n            <Switch>\r\n              <Route\r\n                exact\r\n                path=\"/\"\r\n                render={props => (\r\n                  <Transmute {...props} onRef={ref => (this.transmute = ref)} />\r\n                )}\r\n              />\r\n              <Route\r\n                path=\"/courses\"\r\n                render={props => (\r\n                  <Courses {...props} onRef={ref => (this.courses = ref)} />\r\n                )}\r\n              />\r\n              <Route component={PageError} />\r\n            </Switch>\r\n          </div>\r\n          <div className=\"fixedScreen noselect botnav\">\r\n            <BotNav />\r\n          </div>\r\n        </Fragment>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport Main from \"./components/main\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Main />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n\r\n//Disable zooming to feel more native\r\nwindow.addEventListener(\r\n  \"touchmove\",\r\n  function(event) {\r\n    if (event.scale !== 1) {\r\n      event.preventDefault();\r\n    }\r\n  },\r\n  { passive: false }\r\n);\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\r\nimport ChocobunTheme from \"./chocobuntheme.json\";\r\nimport { CssBaseline } from \"@material-ui/core\";\r\n\r\nconst theme = createMuiTheme(ChocobunTheme);\r\n\r\nReactDOM.render(\r\n  <MuiThemeProvider theme={theme}>\r\n    <CssBaseline />\r\n    <App />\r\n  </MuiThemeProvider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nif (\"serviceWorker\" in navigator) {\r\n  navigator.serviceWorker\r\n    .register(\"./serWork.js\")\r\n    .then(function(registration) {\r\n      console.log(\"Registered:\", registration);\r\n    })\r\n    .catch(function(error) {\r\n      console.log(\"Registration failed: \", error);\r\n    });\r\n}\r\n"],"sourceRoot":""}