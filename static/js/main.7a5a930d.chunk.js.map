{"version":3,"sources":["components/navbar.jsx","components/fillform.jsx","App.js","index.js"],"names":["withStyles","root","flexGrow","props","classes","react_default","a","createElement","className","AppBar_default","position","color","Toolbar_default","Typography_default","variant","FillForm","state","base","yourScore","totalItems","res1","res2","handleChange","name","event","_this","setState","Object","defineProperty","target","value","handleTransmute","tScore","pScore","parseInt","Math","round","this","Fragment","FormControl_default","InputLabel_default","htmlFor","Select_default","native","onChange","TextField_default","id","label","textField","margin","fullWidth","type","Button_default","onClick","React","Component","theme","display","flexWrap","formControl","spacing","unit","minWidth","selectEmpty","marginTop","App","document","body","style","navbar","fillform","window","addEventListener","scale","preventDefault","passive","createMuiTheme","typography","useNextVariants","palette","primary","main","brown","background","ReactDOM","render","styles","src_App_0","getElementById","navigator","serviceWorker","register","then","registration","console","log","catch","error"],"mappings":"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","file":"static/js/main.7a5a930d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst styles = {\r\n  root: {\r\n    flexGrow: 1\r\n  }\r\n};\r\n\r\nfunction NavBar(props) {\r\n  const { classes } = props;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"sticky\" color=\"primary\">\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" color=\"inherit\">\r\n            Chocobun\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n\r\nNavBar.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(NavBar);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\"\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing.unit,\r\n    minWidth: 120\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing.unit * 2\r\n  }\r\n});\r\n\r\nclass FillForm extends React.Component {\r\n  state = {\r\n    base: \"65\",\r\n    yourScore: \"\",\r\n    totalItems: \"\",\r\n    res1: \"Chocobun App by Chocobun Fam\",\r\n    res2: \"v0.1.6\"\r\n  };\r\n\r\n  handleChange = name => event => {\r\n    this.setState({ [name]: event.target.value });\r\n  };\r\n\r\n  handleTransmute = () => {\r\n    let tScore, pScore, scoreStat;\r\n\r\n    if (this.state.base === \"65\") {\r\n      tScore =\r\n        (parseInt(this.state.yourScore) / parseInt(this.state.totalItems)) *\r\n          71.5 +\r\n        28.5;\r\n      tScore = Math.round(tScore);\r\n      pScore = parseInt(this.state.totalItems) * 0.65;\r\n    } else if (this.state.base === \"60\") {\r\n      tScore =\r\n        (parseInt(this.state.yourScore) / parseInt(this.state.totalItems)) *\r\n          62.5 +\r\n        37.5;\r\n      tScore = Math.round(tScore);\r\n      pScore = parseInt(this.state.totalItems) * 0.6;\r\n    } else if (this.state.base === \"50\") {\r\n      tScore =\r\n        (parseInt(this.state.yourScore) / parseInt(this.state.totalItems)) *\r\n          50 +\r\n        50;\r\n      tScore = Math.round(tScore);\r\n      pScore = parseInt(this.state.totalItems) * 0.5;\r\n    }\r\n\r\n    if (parseInt(this.state.yourScore) >= pScore) {\r\n      scoreStat = \"You passed! \";\r\n    } else {\r\n      scoreStat = \"You failed! \";\r\n    }\r\n\r\n    const res1 = scoreStat + \"The passing score is: \" + pScore;\r\n    const res2 = \"Your transmuted grade is: \" + tScore;\r\n    this.setState({ res1, res2 });\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"ScoreInput\">\r\n          <FormControl>\r\n            <InputLabel htmlFor=\"base-native-simple\">Base</InputLabel>\r\n            <Select\r\n              native\r\n              value={this.state.base}\r\n              onChange={this.handleChange(\"base\")}\r\n            >\r\n              <option value={65}>65</option>\r\n              <option value={55}>55</option>\r\n              <option value={50}>50</option>\r\n            </Select>\r\n          </FormControl>\r\n          <TextField\r\n            id=\"standard-yourScore\"\r\n            label=\"Your Score\"\r\n            className={classes.textField}\r\n            value={this.state.yourScore}\r\n            onChange={this.handleChange(\"yourScore\")}\r\n            margin=\"normal\"\r\n            fullWidth\r\n            type=\"tel\"\r\n          />\r\n          <TextField\r\n            id=\"standard-totalItems\"\r\n            label=\"Total Items\"\r\n            className={classes.textField}\r\n            value={this.state.totalItems}\r\n            onChange={this.handleChange(\"totalItems\")}\r\n            margin=\"normal\"\r\n            fullWidth\r\n            type=\"tel\"\r\n          />\r\n        </div>\r\n        <div className=\"TransmuteButton\">\r\n          <Button\r\n            onClick={this.handleTransmute}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n          >\r\n            Transmute\r\n          </Button>\r\n        </div>\r\n        <div className=\"TransmuteResult\">\r\n          <p>{this.state.res1}</p>\r\n          <p>{this.state.res2}</p>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nFillForm.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(FillForm);\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\n\n//Import Components\nimport NavBar from \"./components/navbar\";\nimport FillForm from \"./components/fillform\";\n\nclass App extends Component {\n  render() {\n    return (\n      (document.body.style = \"background: #ffebcd\"),\n      (\n        <div className=\"fixedScreen noselect\">\n          <NavBar />\n          <FillForm />\n        </div>\n      )\n    );\n  }\n}\n\nexport default App;\n\n//Disable Zooming\nwindow.addEventListener(\n  \"touchmove\",\n  function(event) {\n    if (event.scale !== 1) {\n      event.preventDefault();\n    }\n  },\n  { passive: false }\n);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n//import * as serviceWorker from \"./serviceWorker\";\n\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nimport brown from \"@material-ui/core/colors/brown\";\n\nconst theme = createMuiTheme({\n  typography: {\n    useNextVariants: true\n  },\n  palette: {\n    primary: {\n      main: brown[500]\n    },\n    background: \"#ffebcd\"\n  }\n});\n\nReactDOM.render(\n  <MuiThemeProvider theme={theme}>\n    <App />\n  </MuiThemeProvider>,\n  document.getElementById(\"root\")\n);\n\n//serviceWorker.unregister();\n\n//Test starts here\n\nif (\"serviceWorker\" in navigator) {\n  navigator.serviceWorker\n    .register(\"./serWork.js\")\n    .then(function(registration) {\n      console.log(\"Registered:\", registration);\n    })\n    .catch(function(error) {\n      console.log(\"Registration failed: \", error);\n    });\n}\n\n// if ('serviceWorker' in navigator) {\n//   // Use the window load event to keep the page load performant\n//   window.addEventListener('load', () => {\n//     navigator.serviceWorker.register('serWork.js');\n//   });\n// }\n\n// if ('serviceWorker' in navigator) {\n//   window.addEventListener('load', function() {\n//     navigator.serviceWorker.register('/service-worker.js');\n//   });\n// }\n\n// if (workbox) {\n//   console.log(`Yay! Workbox is loaded 🎉`);\n// } else {\n//   console.log(`Boo! Workbox didn't load 😬`);\n// }\n"],"sourceRoot":""}